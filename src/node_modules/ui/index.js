var React = require('react');

var router = require('router');
var collections = require('collections');

var FourOhFourPage = require('./404');

var GraphView = require('graph-view/graph-view');
var predicates = ['stewardOf'];
//TODO actions
var actions = []

name: Mikey Williams
handle: ahdinosaur
bio: >
  i'm a hippie hacker on a mission to demystify the magic of technology and put
  the people in control. i'm currently working on open source socioeconomic
  infrastructure within the Enspiral, Open App Ecosystem, and Bevry networks.
location:
  - "@id": http://sws.geonames.org/5332921/
    "@type": Place
    name: California
  - "@id": http://sws.geonames.org/2186224/
    "@type": Place
    name: New Zealand

memberships:
  - "@id": http://api.craftodex.enspiral.info/memberships/craftworks-mikey
    "@type": Membership
    description: mad scientist
    group:
      "@id": http://api.craftodex.enspiral.info/groups/craftworks
    startDate: 2014-04-28
    role:
      - "@id": http://api.craftodex.enspiral.info/roles/journeyer-developer
      - "@id": http://api.craftodex.enspiral.info/roles/provisional-member

var entities = [
  {
    id: 1,
    name: 'Mikey',
    handle: 'ahdinosaur',
    bio: 
      "i'm a hippie hacker on a mission to demystify the magic of technology and put
      the people in control. i'm currently working on open source socioeconomic
      infrastructure within the Enspiral, Open App Ecosystem, and Bevry networks.",
    location: [
      {
        "@id": "http://sws.geonames.org/5332921/",
        "@type": "Place"
        name: "California"
      },
      {
        "@id": "http://sws.geonames.org/2186224/",
        "@type": "Place",
        name: "New Zealand"
      }
    ],
  url: "http://dinosaur.is",
  image: "http://gravatar.com/avatar/22ee24b84d0a2a9446fc9c0fe0652c46?s=512&d=identicon",
    memberships: [ { "@id": "http://api.craftodex.enspiral.info/memberships/craftworks-mikey" } ],
    groups: [ { "@id": "http://api.craftodex.enspiral.info/memberships/craftworks-mikey" }],
    stewardOf: [2,3]
  },
  {
    id: 2,
    name: 'Hannah',
    stewardOf: null
  },
  {
    id: 3,
    name: 'Craig',
    stewardOf: [4,5]
  },
  {
    id: 4,
    name: 'Nanz',
    stewardOf: null
  },
  {
    id: 5,
    name: 'Jesse',
    stewardOf: null
  }
];

module.exports = React.createClass({

  render: function () {
    var route = this.props.route;

    var Page;
    if (route) {
      Page = collections[route.collection].Page;
    } else {
      Page = FourOhFourPage;
    }

    return (
      <div>
        <header>
          {
            "collection: " + route.collection
            + ", id: " + route.id
            + ", relation: " + route.relation
            + ", query: " + JSON.stringify(route.query)
          }
        </header>
        <main>
          <Page
            route={this.props.route}
            model={this.props.model} />
          <GraphView entities={entities} predicates={predicates} actions={actions} />
        </main>
      </div>
    );
  },
});
