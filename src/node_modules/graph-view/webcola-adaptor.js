var Adaptor = require('webcola/WebCola/lib/adaptor');

var dispatch = require('d3-dispatch');
var timer = require('d3-timer');

module.exports = function () {
  var event = dispatch("start", "tick", "end");


  var adaptor  = Adaptor({
    trigger: function (e) {
        event[e.type](e); // via d3 dispatcher, e.g. event.start(e);
    },

    on: function(type, listener){
        return event.on(type, listener);
    },

    kick: function (tick) {
        timer(tick);
    }

    //NOT USED YET
    // // use `node.call(adaptor.drag)` to make nodes draggable
    // drag: function () {
    //     var drag = d3.behavior.drag()
    //         .origin(function(d){ return d; })
    //         .on("dragstart.d3adaptor", dragHelper.dragstart)
    //         .on("drag.d3adaptor", function (d) {
    //             d.px = d3.event.x, d.py = d3.event.y;
    //             adaptor.resume(); // restart annealing
    //         })
    //         .on("dragend.d3adaptor", dragHelper.dragend);

    //     if (!arguments.length) return drag;

    //     this//.on("mouseover.adaptor", colaMouseover)
    //         //.on("mouseout.adaptor", colaMouseout)
    //         .call(drag);
    // }
  });

  return adaptor;
}

